<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vs.myworld.business.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.vs.myworld.business.domain.Role">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="world_id" jdbcType="BIGINT" property="worldId" />
    <result column="character_id" jdbcType="BIGINT" property="characterId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role_name, avatar, `desc`, `uid`, world_id, character_id, `status`, created_at, 
    updated_at
  </sql>
  <select id="selectByExample" parameterType="com.vs.myworld.business.domain.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mw_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mw_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mw_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.vs.myworld.business.domain.RoleExample">
    delete from mw_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vs.myworld.business.domain.Role">
    insert into mw_role (id, role_name, avatar, 
      `desc`, `uid`, world_id, character_id, 
      `status`, created_at, updated_at
      )
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{desc,jdbcType=VARCHAR}, #{uid,jdbcType=BIGINT}, #{worldId,jdbcType=BIGINT}, #{characterId,jdbcType=BIGINT}, 
      #{status,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.vs.myworld.business.domain.Role">
    insert into mw_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
      <if test="worldId != null">
        world_id,
      </if>
      <if test="characterId != null">
        character_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="worldId != null">
        #{worldId,jdbcType=BIGINT},
      </if>
      <if test="characterId != null">
        #{characterId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vs.myworld.business.domain.RoleExample" resultType="java.lang.Long">
    select count(*) from mw_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mw_role
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.roleName != null">
        role_name = #{row.roleName,jdbcType=VARCHAR},
      </if>
      <if test="row.avatar != null">
        avatar = #{row.avatar,jdbcType=VARCHAR},
      </if>
      <if test="row.desc != null">
        `desc` = #{row.desc,jdbcType=VARCHAR},
      </if>
      <if test="row.uid != null">
        `uid` = #{row.uid,jdbcType=BIGINT},
      </if>
      <if test="row.worldId != null">
        world_id = #{row.worldId,jdbcType=BIGINT},
      </if>
      <if test="row.characterId != null">
        character_id = #{row.characterId,jdbcType=BIGINT},
      </if>
      <if test="row.status != null">
        `status` = #{row.status,jdbcType=TINYINT},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mw_role
    set id = #{row.id,jdbcType=BIGINT},
      role_name = #{row.roleName,jdbcType=VARCHAR},
      avatar = #{row.avatar,jdbcType=VARCHAR},
      `desc` = #{row.desc,jdbcType=VARCHAR},
      `uid` = #{row.uid,jdbcType=BIGINT},
      world_id = #{row.worldId,jdbcType=BIGINT},
      character_id = #{row.characterId,jdbcType=BIGINT},
      `status` = #{row.status,jdbcType=TINYINT},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vs.myworld.business.domain.Role">
    update mw_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=BIGINT},
      </if>
      <if test="worldId != null">
        world_id = #{worldId,jdbcType=BIGINT},
      </if>
      <if test="characterId != null">
        character_id = #{characterId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vs.myworld.business.domain.Role">
    update mw_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      `uid` = #{uid,jdbcType=BIGINT},
      world_id = #{worldId,jdbcType=BIGINT},
      character_id = #{characterId,jdbcType=BIGINT},
      `status` = #{status,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>